<html><head><title>Win32 Foundation Classes Release 73</title><!-- Originally downloaded from http://www.samblackburn.com --></head><body>
<h1>Release 73</h1>2004-07-15<br />
<i>&quot;You can get credit for something or get it done, but not both.&quot;</i><br />Dr. Richard Garwin<p />
<p /><table border="0" width="100%" cellpadding="0" cellspacing="0">
<tr><td bgcolor="#0" valign="middle"><font face="Arial" size="3" color="#FFFFFF">
&nbsp;<i><b>This Release's Editorial</b></i></font></td></tr></table><p />
WFC development continues at glacial speeds. I am now a home owner so I get to do &quot;house things&quot; instead
of coding (leaking roof, build a deck, etc). Such is life. WFC will continue to take a back seat as my wife and I
concentrate on filling our nice new house with children (two on the way as we speak). Also, I will be shifting my
focus to C# although all performance code will be done in C++. C# has a design/philosphy flaw where
destructors are considered to be a bad thing (along with any form of memory allocation).
I know, I know. Many of you out there will think I'm a Neanderthal for saying this but
did we learn nothing from Java? In C# you are not supposed to worry about the &quot;lifetime&quot;
of your objects. In C++ you do. Whenever you see programming tips such as &quot;You
should always call the Dispose method when you no longer need an object&quot; you know
you're hacking around a design flaw. The problem really gets bad/noticable when you have a
C# object wrapping an operating system handle of some sort (window handle, GDI object handle, file handle, etc).
<p /><table border="0" width="100%" cellpadding="0" cellspacing="0">
<tr><td bgcolor="#0" valign="MIDDLE"><font face="Arial" size="3" color="#FFFFFF">
&nbsp;<i><b>What's New</b></i></font></td></tr></table><p /><ul>
<li>Lots and lots, just look around.</li>
<li>wfc_read_xml_from_file</li></ul><hr /><a href="release51.htm">Release 51 Notes</a><p />
<a href="../index.html" target="_parent">Return to Sam's Home Page</a></body></html>